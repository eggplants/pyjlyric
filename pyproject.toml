[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling", "uv-dynamic-versioning" ]

[project]
name = "pyjlyric"
description = "Japanese Lyric Aggregator"
readme = "README.md"
keywords = [
  "download-lyrics",
  "japanese",
  "japanese-songs",
  "lyrics",
  "lyrics-scraping",
]
license = { text = "MIT" }
authors = [ { name = "eggplants", email = "w10776e8w@yahoo.co.jp" } ]
requires-python = ">=3.9,<4"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
dynamic = [ "version" ]
dependencies = [
  "beautifulsoup4>=4.12.3,<5",
  "chardet>=5.2,<6",
  "eval-type-backport>=0.2.2,<0.3; python_version<'3.10'",
  "lxml>=5.3,<6",
  "pydantic>=2.10.5,<3",
  "requests>=2.32.3,<3",
  "typing-extensions>=4.12.2,<5",
]

urls.Repository = "https://github.com/eggplants/pyjlyric"
scripts.jrc = "pyjlyric.main:main"

[dependency-groups]
dev = [
  "mypy>=0.991,<1.15",
  "pre-commit>=2.20,<5",
  "pytest>=7.2.2,<9",
  "pytest-cov>=4,<7",
  "taskipy>=1.10.3,<2",
]
docs = [ "pdoc" ]

[tool.hatch.version]
# NOTE: tool.hatch.version.source is not listed in official schema.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21
source = "uv-dynamic-versioning"

[tool.hatch.build.targets]
sdist.include = [ "pyjlyric" ]
wheel.include = [ "pyjlyric" ]

[tool.ruff]
line-length = 120
lint.select = [
  "ALL",
]
lint.ignore = [
  "D",
]
lint.per-file-ignores."tests/test_*.py" = [
  "S101", #  Use of assert detected
]
lint.mccabe.max-complexity = 11

lint.pydocstyle.convention = "google"

[tool.mypy]
pretty = true
python_version = "3.9"
show_error_codes = true
strict = true
plugins = [
  "pydantic.mypy",
]

[tool.uv]
default-groups = [
  "dev",
  "docs",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.taskipy.tasks]
test = "pytest --cov=pyjlyric --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
gendoc = "pdoc pyjlyric -o ./docs --docformat google"
